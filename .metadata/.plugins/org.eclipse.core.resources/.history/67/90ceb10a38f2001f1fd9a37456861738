package model;

import java.time.LocalDateTime;

public class Library implements LoanService,LoanInformationService{

	private static Integer borrowedItemCount = 0;
	
	public Library() {
			
	}

	/**
	 * Imprime todos os itens que o usuário pegou emprestado.
	 *@param user
	 */
	@Override
	public void getInformation(User user) {
		for(LoanItem item : user.getLoans()) {
			
			System.out.println(item.toString());
		}
	}

	/**
	 *@param item
	 *@param user
	 *@param returnDate
	 */
	@Override
	public void loanItem(Item item, User user,LocalDateTime returnDate) {
		// TODO Auto-generated method stub
		
		if(item.getIsBorrowed().equals(false)) {
			LoanItem loan = new LoanItem(item.getIdItem(),user.getIdUser(),returnDate);
			user.getLoans().add(loan);
			item.setIsBorrowed(true);
			borrowedItemCount++;
		}else {
			
			throw new IllegalArgumentException("Esse item já está emprestado!");
		}
		
		
	}

	/**
	 *
	 */
	@Override
	public void returnItem(Item item,User user) {
		
		for(LoanItem currentItem: user.getLoans()) {
			
			if(item.getIdItem() == currentItem.getIdItem()) {
				user.getLoans().remove(currentItem);
				item.setIsBorrowed(false);
				borrowedItemCount--;
			}
		}
		
	}
	
}
